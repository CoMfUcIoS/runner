package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// GetGroupsNameReader is a Reader for the GetGroupsName structure.
type GetGroupsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetGroupsNameReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetGroupsNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetGroupsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetGroupsNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetGroupsNameOK creates a GetGroupsNameOK with default headers values
func NewGetGroupsNameOK() *GetGroupsNameOK {
	return &GetGroupsNameOK{}
}

/*GetGroupsNameOK handles this case with default header values.

Group details and stats.
*/
type GetGroupsNameOK struct {
	Payload *models.GroupWrapper
}

func (o *GetGroupsNameOK) Error() string {
	return fmt.Sprintf("[GET /groups/{name}][%d] getGroupsNameOK  %+v", 200, o.Payload)
}

func (o *GetGroupsNameOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsNameNotFound creates a GetGroupsNameNotFound with default headers values
func NewGetGroupsNameNotFound() *GetGroupsNameNotFound {
	return &GetGroupsNameNotFound{}
}

/*GetGroupsNameNotFound handles this case with default header values.

Group does not exist.
*/
type GetGroupsNameNotFound struct {
	Payload *models.Error
}

func (o *GetGroupsNameNotFound) Error() string {
	return fmt.Sprintf("[GET /groups/{name}][%d] getGroupsNameNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupsNameNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsNameDefault creates a GetGroupsNameDefault with default headers values
func NewGetGroupsNameDefault(code int) *GetGroupsNameDefault {
	return &GetGroupsNameDefault{
		_statusCode: code,
	}
}

/*GetGroupsNameDefault handles this case with default header values.

Unexpected error
*/
type GetGroupsNameDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get groups name default response
func (o *GetGroupsNameDefault) Code() int {
	return o._statusCode
}

func (o *GetGroupsNameDefault) Error() string {
	return fmt.Sprintf("[GET /groups/{name}][%d] GetGroupsName default  %+v", o._statusCode, o.Payload)
}

func (o *GetGroupsNameDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
