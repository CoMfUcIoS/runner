package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// GetJobIDLogReader is a Reader for the GetJobIDLog structure.
type GetJobIDLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetJobIDLogReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetJobIDLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 428:
		result := NewGetJobIDLogPreconditionRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetJobIDLogDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetJobIDLogOK creates a GetJobIDLogOK with default headers values
func NewGetJobIDLogOK() *GetJobIDLogOK {
	return &GetJobIDLogOK{}
}

/*GetJobIDLogOK handles this case with default header values.

Log retrieved.
*/
type GetJobIDLogOK struct {
	Payload string
}

func (o *GetJobIDLogOK) Error() string {
	return fmt.Sprintf("[GET /job/{id}/log][%d] getJobIdLogOK  %+v", 200, o.Payload)
}

func (o *GetJobIDLogOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJobIDLogPreconditionRequired creates a GetJobIDLogPreconditionRequired with default headers values
func NewGetJobIDLogPreconditionRequired() *GetJobIDLogPreconditionRequired {
	return &GetJobIDLogPreconditionRequired{}
}

/*GetJobIDLogPreconditionRequired handles this case with default header values.

Job has not finished yet. Try again later.
*/
type GetJobIDLogPreconditionRequired struct {
	Payload *models.Error
}

func (o *GetJobIDLogPreconditionRequired) Error() string {
	return fmt.Sprintf("[GET /job/{id}/log][%d] getJobIdLogPreconditionRequired  %+v", 428, o.Payload)
}

func (o *GetJobIDLogPreconditionRequired) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJobIDLogDefault creates a GetJobIDLogDefault with default headers values
func NewGetJobIDLogDefault(code int) *GetJobIDLogDefault {
	return &GetJobIDLogDefault{
		_statusCode: code,
	}
}

/*GetJobIDLogDefault handles this case with default header values.

Unexpected error
*/
type GetJobIDLogDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get job ID log default response
func (o *GetJobIDLogDefault) Code() int {
	return o._statusCode
}

func (o *GetJobIDLogDefault) Error() string {
	return fmt.Sprintf("[GET /job/{id}/log][%d] GetJobIDLog default  %+v", o._statusCode, o.Payload)
}

func (o *GetJobIDLogDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
