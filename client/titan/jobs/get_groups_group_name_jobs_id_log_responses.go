package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// GetGroupsGroupNameJobsIDLogReader is a Reader for the GetGroupsGroupNameJobsIDLog structure.
type GetGroupsGroupNameJobsIDLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetGroupsGroupNameJobsIDLogReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetGroupsGroupNameJobsIDLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 428:
		result := NewGetGroupsGroupNameJobsIDLogPreconditionRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetGroupsGroupNameJobsIDLogDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetGroupsGroupNameJobsIDLogOK creates a GetGroupsGroupNameJobsIDLogOK with default headers values
func NewGetGroupsGroupNameJobsIDLogOK() *GetGroupsGroupNameJobsIDLogOK {
	return &GetGroupsGroupNameJobsIDLogOK{}
}

/*GetGroupsGroupNameJobsIDLogOK handles this case with default header values.

Log retrieved.
*/
type GetGroupsGroupNameJobsIDLogOK struct {
	Payload string
}

func (o *GetGroupsGroupNameJobsIDLogOK) Error() string {
	return fmt.Sprintf("[GET /groups/{group_name}/jobs/{id}/log][%d] getGroupsGroupNameJobsIdLogOK  %+v", 200, o.Payload)
}

func (o *GetGroupsGroupNameJobsIDLogOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsGroupNameJobsIDLogPreconditionRequired creates a GetGroupsGroupNameJobsIDLogPreconditionRequired with default headers values
func NewGetGroupsGroupNameJobsIDLogPreconditionRequired() *GetGroupsGroupNameJobsIDLogPreconditionRequired {
	return &GetGroupsGroupNameJobsIDLogPreconditionRequired{}
}

/*GetGroupsGroupNameJobsIDLogPreconditionRequired handles this case with default header values.

Job has not finished yet. Try again later.
*/
type GetGroupsGroupNameJobsIDLogPreconditionRequired struct {
	Payload *models.Error
}

func (o *GetGroupsGroupNameJobsIDLogPreconditionRequired) Error() string {
	return fmt.Sprintf("[GET /groups/{group_name}/jobs/{id}/log][%d] getGroupsGroupNameJobsIdLogPreconditionRequired  %+v", 428, o.Payload)
}

func (o *GetGroupsGroupNameJobsIDLogPreconditionRequired) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsGroupNameJobsIDLogDefault creates a GetGroupsGroupNameJobsIDLogDefault with default headers values
func NewGetGroupsGroupNameJobsIDLogDefault(code int) *GetGroupsGroupNameJobsIDLogDefault {
	return &GetGroupsGroupNameJobsIDLogDefault{
		_statusCode: code,
	}
}

/*GetGroupsGroupNameJobsIDLogDefault handles this case with default header values.

Unexpected error
*/
type GetGroupsGroupNameJobsIDLogDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get groups group name jobs ID log default response
func (o *GetGroupsGroupNameJobsIDLogDefault) Code() int {
	return o._statusCode
}

func (o *GetGroupsGroupNameJobsIDLogDefault) Error() string {
	return fmt.Sprintf("[GET /groups/{group_name}/jobs/{id}/log][%d] GetGroupsGroupNameJobsIDLog default  %+v", o._statusCode, o.Payload)
}

func (o *GetGroupsGroupNameJobsIDLogDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
