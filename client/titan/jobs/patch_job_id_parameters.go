package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// NewPatchJobIDParams creates a new PatchJobIDParams object
// with the default values initialized.
func NewPatchJobIDParams() *PatchJobIDParams {
	var ()
	return &PatchJobIDParams{}
}

/*PatchJobIDParams contains all the parameters to send to the API endpoint
for the patch job ID operation typically these are written to a http.Request
*/
type PatchJobIDParams struct {

	/*Body
	  Job data to post

	*/
	Body *models.JobWrapper
	/*ID
	  Job id

	*/
	ID string
}

// WithBody adds the body to the patch job ID params
func (o *PatchJobIDParams) WithBody(body *models.JobWrapper) *PatchJobIDParams {
	o.Body = body
	return o
}

// WithID adds the id to the patch job ID params
func (o *PatchJobIDParams) WithID(id string) *PatchJobIDParams {
	o.ID = id
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchJobIDParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	if o.Body == nil {
		o.Body = new(models.JobWrapper)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
