package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// PostJobIDCancelReader is a Reader for the PostJobIDCancel structure.
type PostJobIDCancelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostJobIDCancelReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostJobIDCancelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewPostJobIDCancelConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostJobIDCancelDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostJobIDCancelOK creates a PostJobIDCancelOK with default headers values
func NewPostJobIDCancelOK() *PostJobIDCancelOK {
	return &PostJobIDCancelOK{}
}

/*PostJobIDCancelOK handles this case with default header values.

Job cancelled.
*/
type PostJobIDCancelOK struct {
	Payload *models.JobWrapper
}

func (o *PostJobIDCancelOK) Error() string {
	return fmt.Sprintf("[POST /job/{id}/cancel][%d] postJobIdCancelOK  %+v", 200, o.Payload)
}

func (o *PostJobIDCancelOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostJobIDCancelConflict creates a PostJobIDCancelConflict with default headers values
func NewPostJobIDCancelConflict() *PostJobIDCancelConflict {
	return &PostJobIDCancelConflict{}
}

/*PostJobIDCancelConflict handles this case with default header values.

Could not cancel job because it already succeeded or failed.
*/
type PostJobIDCancelConflict struct {
	Payload *models.Error
}

func (o *PostJobIDCancelConflict) Error() string {
	return fmt.Sprintf("[POST /job/{id}/cancel][%d] postJobIdCancelConflict  %+v", 409, o.Payload)
}

func (o *PostJobIDCancelConflict) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostJobIDCancelDefault creates a PostJobIDCancelDefault with default headers values
func NewPostJobIDCancelDefault(code int) *PostJobIDCancelDefault {
	return &PostJobIDCancelDefault{
		_statusCode: code,
	}
}

/*PostJobIDCancelDefault handles this case with default header values.

Unexpected error
*/
type PostJobIDCancelDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post job ID cancel default response
func (o *PostJobIDCancelDefault) Code() int {
	return o._statusCode
}

func (o *PostJobIDCancelDefault) Error() string {
	return fmt.Sprintf("[POST /job/{id}/cancel][%d] PostJobIDCancel default  %+v", o._statusCode, o.Payload)
}

func (o *PostJobIDCancelDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
