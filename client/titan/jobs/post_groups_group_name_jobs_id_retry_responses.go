package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// PostGroupsGroupNameJobsIDRetryReader is a Reader for the PostGroupsGroupNameJobsIDRetry structure.
type PostGroupsGroupNameJobsIDRetryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostGroupsGroupNameJobsIDRetryReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostGroupsGroupNameJobsIDRetryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewPostGroupsGroupNameJobsIDRetryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostGroupsGroupNameJobsIDRetryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostGroupsGroupNameJobsIDRetryOK creates a PostGroupsGroupNameJobsIDRetryOK with default headers values
func NewPostGroupsGroupNameJobsIDRetryOK() *PostGroupsGroupNameJobsIDRetryOK {
	return &PostGroupsGroupNameJobsIDRetryOK{}
}

/*PostGroupsGroupNameJobsIDRetryOK handles this case with default header values.

Retrying job. The new Job is returned.
*/
type PostGroupsGroupNameJobsIDRetryOK struct {
	Payload *models.JobWrapper
}

func (o *PostGroupsGroupNameJobsIDRetryOK) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/retry][%d] postGroupsGroupNameJobsIdRetryOK  %+v", 200, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDRetryOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDRetryConflict creates a PostGroupsGroupNameJobsIDRetryConflict with default headers values
func NewPostGroupsGroupNameJobsIDRetryConflict() *PostGroupsGroupNameJobsIDRetryConflict {
	return &PostGroupsGroupNameJobsIDRetryConflict{}
}

/*PostGroupsGroupNameJobsIDRetryConflict handles this case with default header values.

Job is not in a valid state to retry. Check status.
*/
type PostGroupsGroupNameJobsIDRetryConflict struct {
	Payload *models.IDStatus
}

func (o *PostGroupsGroupNameJobsIDRetryConflict) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/retry][%d] postGroupsGroupNameJobsIdRetryConflict  %+v", 409, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDRetryConflict) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDRetryDefault creates a PostGroupsGroupNameJobsIDRetryDefault with default headers values
func NewPostGroupsGroupNameJobsIDRetryDefault(code int) *PostGroupsGroupNameJobsIDRetryDefault {
	return &PostGroupsGroupNameJobsIDRetryDefault{
		_statusCode: code,
	}
}

/*PostGroupsGroupNameJobsIDRetryDefault handles this case with default header values.

Unexpected error
*/
type PostGroupsGroupNameJobsIDRetryDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post groups group name jobs ID retry default response
func (o *PostGroupsGroupNameJobsIDRetryDefault) Code() int {
	return o._statusCode
}

func (o *PostGroupsGroupNameJobsIDRetryDefault) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/retry][%d] PostGroupsGroupNameJobsIDRetry default  %+v", o._statusCode, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDRetryDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
