package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// PostJobIDFailReader is a Reader for the PostJobIDFail structure.
type PostJobIDFailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostJobIDFailReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostJobIDFailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostJobIDFailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostJobIDFailConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostJobIDFailDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostJobIDFailOK creates a PostJobIDFailOK with default headers values
func NewPostJobIDFailOK() *PostJobIDFailOK {
	return &PostJobIDFailOK{}
}

/*PostJobIDFailOK handles this case with default header values.

Job updated.
*/
type PostJobIDFailOK struct {
	Payload *models.JobWrapper
}

func (o *PostJobIDFailOK) Error() string {
	return fmt.Sprintf("[POST /job/{id}/fail][%d] postJobIdFailOK  %+v", 200, o.Payload)
}

func (o *PostJobIDFailOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostJobIDFailNotFound creates a PostJobIDFailNotFound with default headers values
func NewPostJobIDFailNotFound() *PostJobIDFailNotFound {
	return &PostJobIDFailNotFound{}
}

/*PostJobIDFailNotFound handles this case with default header values.

Job does not exist.
*/
type PostJobIDFailNotFound struct {
	Payload *models.Error
}

func (o *PostJobIDFailNotFound) Error() string {
	return fmt.Sprintf("[POST /job/{id}/fail][%d] postJobIdFailNotFound  %+v", 404, o.Payload)
}

func (o *PostJobIDFailNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostJobIDFailConflict creates a PostJobIDFailConflict with default headers values
func NewPostJobIDFailConflict() *PostJobIDFailConflict {
	return &PostJobIDFailConflict{}
}

/*PostJobIDFailConflict handles this case with default header values.

Job was not in running state.
*/
type PostJobIDFailConflict struct {
	Payload *models.IDStatus
}

func (o *PostJobIDFailConflict) Error() string {
	return fmt.Sprintf("[POST /job/{id}/fail][%d] postJobIdFailConflict  %+v", 409, o.Payload)
}

func (o *PostJobIDFailConflict) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostJobIDFailDefault creates a PostJobIDFailDefault with default headers values
func NewPostJobIDFailDefault(code int) *PostJobIDFailDefault {
	return &PostJobIDFailDefault{
		_statusCode: code,
	}
}

/*PostJobIDFailDefault handles this case with default header values.

Unexpected error
*/
type PostJobIDFailDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post job ID fail default response
func (o *PostJobIDFailDefault) Code() int {
	return o._statusCode
}

func (o *PostJobIDFailDefault) Error() string {
	return fmt.Sprintf("[POST /job/{id}/fail][%d] PostJobIDFail default  %+v", o._statusCode, o.Payload)
}

func (o *PostJobIDFailDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
