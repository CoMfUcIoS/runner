package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// PostGroupsGroupNameJobsIDLogReader is a Reader for the PostGroupsGroupNameJobsIDLog structure.
type PostGroupsGroupNameJobsIDLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostGroupsGroupNameJobsIDLogReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostGroupsGroupNameJobsIDLogCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostGroupsGroupNameJobsIDLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostGroupsGroupNameJobsIDLogDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostGroupsGroupNameJobsIDLogCreated creates a PostGroupsGroupNameJobsIDLogCreated with default headers values
func NewPostGroupsGroupNameJobsIDLogCreated() *PostGroupsGroupNameJobsIDLogCreated {
	return &PostGroupsGroupNameJobsIDLogCreated{}
}

/*PostGroupsGroupNameJobsIDLogCreated handles this case with default header values.

Log stored successfully.
*/
type PostGroupsGroupNameJobsIDLogCreated struct {
	Payload *models.JobWrapper
}

func (o *PostGroupsGroupNameJobsIDLogCreated) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/log][%d] postGroupsGroupNameJobsIdLogCreated  %+v", 201, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDLogCreated) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDLogNotFound creates a PostGroupsGroupNameJobsIDLogNotFound with default headers values
func NewPostGroupsGroupNameJobsIDLogNotFound() *PostGroupsGroupNameJobsIDLogNotFound {
	return &PostGroupsGroupNameJobsIDLogNotFound{}
}

/*PostGroupsGroupNameJobsIDLogNotFound handles this case with default header values.

Job does not exist.
*/
type PostGroupsGroupNameJobsIDLogNotFound struct {
	Payload *models.Error
}

func (o *PostGroupsGroupNameJobsIDLogNotFound) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/log][%d] postGroupsGroupNameJobsIdLogNotFound  %+v", 404, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDLogNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDLogDefault creates a PostGroupsGroupNameJobsIDLogDefault with default headers values
func NewPostGroupsGroupNameJobsIDLogDefault(code int) *PostGroupsGroupNameJobsIDLogDefault {
	return &PostGroupsGroupNameJobsIDLogDefault{
		_statusCode: code,
	}
}

/*PostGroupsGroupNameJobsIDLogDefault handles this case with default header values.

Unexpected error
*/
type PostGroupsGroupNameJobsIDLogDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post groups group name jobs ID log default response
func (o *PostGroupsGroupNameJobsIDLogDefault) Code() int {
	return o._statusCode
}

func (o *PostGroupsGroupNameJobsIDLogDefault) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/log][%d] PostGroupsGroupNameJobsIDLog default  %+v", o._statusCode, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDLogDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
