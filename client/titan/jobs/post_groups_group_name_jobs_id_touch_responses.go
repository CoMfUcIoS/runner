package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// PostGroupsGroupNameJobsIDTouchReader is a Reader for the PostGroupsGroupNameJobsIDTouch structure.
type PostGroupsGroupNameJobsIDTouchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostGroupsGroupNameJobsIDTouchReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostGroupsGroupNameJobsIDTouchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostGroupsGroupNameJobsIDTouchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostGroupsGroupNameJobsIDTouchConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostGroupsGroupNameJobsIDTouchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostGroupsGroupNameJobsIDTouchOK creates a PostGroupsGroupNameJobsIDTouchOK with default headers values
func NewPostGroupsGroupNameJobsIDTouchOK() *PostGroupsGroupNameJobsIDTouchOK {
	return &PostGroupsGroupNameJobsIDTouchOK{}
}

/*PostGroupsGroupNameJobsIDTouchOK handles this case with default header values.

Job timeout was reset.
*/
type PostGroupsGroupNameJobsIDTouchOK struct {
}

func (o *PostGroupsGroupNameJobsIDTouchOK) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/touch][%d] postGroupsGroupNameJobsIdTouchOK ", 200)
}

func (o *PostGroupsGroupNameJobsIDTouchOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostGroupsGroupNameJobsIDTouchNotFound creates a PostGroupsGroupNameJobsIDTouchNotFound with default headers values
func NewPostGroupsGroupNameJobsIDTouchNotFound() *PostGroupsGroupNameJobsIDTouchNotFound {
	return &PostGroupsGroupNameJobsIDTouchNotFound{}
}

/*PostGroupsGroupNameJobsIDTouchNotFound handles this case with default header values.

Job does not exist.
*/
type PostGroupsGroupNameJobsIDTouchNotFound struct {
	Payload *models.Error
}

func (o *PostGroupsGroupNameJobsIDTouchNotFound) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/touch][%d] postGroupsGroupNameJobsIdTouchNotFound  %+v", 404, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDTouchNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDTouchConflict creates a PostGroupsGroupNameJobsIDTouchConflict with default headers values
func NewPostGroupsGroupNameJobsIDTouchConflict() *PostGroupsGroupNameJobsIDTouchConflict {
	return &PostGroupsGroupNameJobsIDTouchConflict{}
}

/*PostGroupsGroupNameJobsIDTouchConflict handles this case with default header values.

Job is not in a valid state to touch. Check status.
*/
type PostGroupsGroupNameJobsIDTouchConflict struct {
	Payload *models.IDStatus
}

func (o *PostGroupsGroupNameJobsIDTouchConflict) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/touch][%d] postGroupsGroupNameJobsIdTouchConflict  %+v", 409, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDTouchConflict) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDTouchDefault creates a PostGroupsGroupNameJobsIDTouchDefault with default headers values
func NewPostGroupsGroupNameJobsIDTouchDefault(code int) *PostGroupsGroupNameJobsIDTouchDefault {
	return &PostGroupsGroupNameJobsIDTouchDefault{
		_statusCode: code,
	}
}

/*PostGroupsGroupNameJobsIDTouchDefault handles this case with default header values.

Unexpected error
*/
type PostGroupsGroupNameJobsIDTouchDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post groups group name jobs ID touch default response
func (o *PostGroupsGroupNameJobsIDTouchDefault) Code() int {
	return o._statusCode
}

func (o *PostGroupsGroupNameJobsIDTouchDefault) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/touch][%d] PostGroupsGroupNameJobsIDTouch default  %+v", o._statusCode, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDTouchDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
