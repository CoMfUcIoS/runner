package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// NewPostGroupsGroupNameJobsParams creates a new PostGroupsGroupNameJobsParams object
// with the default values initialized.
func NewPostGroupsGroupNameJobsParams() *PostGroupsGroupNameJobsParams {
	var ()
	return &PostGroupsGroupNameJobsParams{}
}

/*PostGroupsGroupNameJobsParams contains all the parameters to send to the API endpoint
for the post groups group name jobs operation typically these are written to a http.Request
*/
type PostGroupsGroupNameJobsParams struct {

	/*Body
	  Array of jobs to post.

	*/
	Body *models.NewJobsWrapper
	/*GroupName
	  name of the group.

	*/
	GroupName string
}

// WithBody adds the body to the post groups group name jobs params
func (o *PostGroupsGroupNameJobsParams) WithBody(body *models.NewJobsWrapper) *PostGroupsGroupNameJobsParams {
	o.Body = body
	return o
}

// WithGroupName adds the groupName to the post groups group name jobs params
func (o *PostGroupsGroupNameJobsParams) WithGroupName(groupName string) *PostGroupsGroupNameJobsParams {
	o.GroupName = groupName
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PostGroupsGroupNameJobsParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	if o.Body == nil {
		o.Body = new(models.NewJobsWrapper)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param group_name
	if err := r.SetPathParam("group_name", o.GroupName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
