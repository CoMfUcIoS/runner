package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// PostGroupsGroupNameJobsIDErrorReader is a Reader for the PostGroupsGroupNameJobsIDError structure.
type PostGroupsGroupNameJobsIDErrorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostGroupsGroupNameJobsIDErrorReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostGroupsGroupNameJobsIDErrorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostGroupsGroupNameJobsIDErrorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostGroupsGroupNameJobsIDErrorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostGroupsGroupNameJobsIDErrorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostGroupsGroupNameJobsIDErrorOK creates a PostGroupsGroupNameJobsIDErrorOK with default headers values
func NewPostGroupsGroupNameJobsIDErrorOK() *PostGroupsGroupNameJobsIDErrorOK {
	return &PostGroupsGroupNameJobsIDErrorOK{}
}

/*PostGroupsGroupNameJobsIDErrorOK handles this case with default header values.

Job updated.
*/
type PostGroupsGroupNameJobsIDErrorOK struct {
	Payload *models.JobWrapper
}

func (o *PostGroupsGroupNameJobsIDErrorOK) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/error][%d] postGroupsGroupNameJobsIdErrorOK  %+v", 200, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDErrorOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDErrorNotFound creates a PostGroupsGroupNameJobsIDErrorNotFound with default headers values
func NewPostGroupsGroupNameJobsIDErrorNotFound() *PostGroupsGroupNameJobsIDErrorNotFound {
	return &PostGroupsGroupNameJobsIDErrorNotFound{}
}

/*PostGroupsGroupNameJobsIDErrorNotFound handles this case with default header values.

Job does not exist.
*/
type PostGroupsGroupNameJobsIDErrorNotFound struct {
	Payload *models.Error
}

func (o *PostGroupsGroupNameJobsIDErrorNotFound) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/error][%d] postGroupsGroupNameJobsIdErrorNotFound  %+v", 404, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDErrorNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDErrorConflict creates a PostGroupsGroupNameJobsIDErrorConflict with default headers values
func NewPostGroupsGroupNameJobsIDErrorConflict() *PostGroupsGroupNameJobsIDErrorConflict {
	return &PostGroupsGroupNameJobsIDErrorConflict{}
}

/*PostGroupsGroupNameJobsIDErrorConflict handles this case with default header values.

Job was not in running state.
*/
type PostGroupsGroupNameJobsIDErrorConflict struct {
	Payload *models.IDStatus
}

func (o *PostGroupsGroupNameJobsIDErrorConflict) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/error][%d] postGroupsGroupNameJobsIdErrorConflict  %+v", 409, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDErrorConflict) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDErrorDefault creates a PostGroupsGroupNameJobsIDErrorDefault with default headers values
func NewPostGroupsGroupNameJobsIDErrorDefault(code int) *PostGroupsGroupNameJobsIDErrorDefault {
	return &PostGroupsGroupNameJobsIDErrorDefault{
		_statusCode: code,
	}
}

/*PostGroupsGroupNameJobsIDErrorDefault handles this case with default header values.

Unexpected error
*/
type PostGroupsGroupNameJobsIDErrorDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post groups group name jobs ID error default response
func (o *PostGroupsGroupNameJobsIDErrorDefault) Code() int {
	return o._statusCode
}

func (o *PostGroupsGroupNameJobsIDErrorDefault) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/error][%d] PostGroupsGroupNameJobsIDError default  %+v", o._statusCode, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDErrorDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
