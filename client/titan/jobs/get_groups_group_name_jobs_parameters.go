package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/swag"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewGetGroupsGroupNameJobsParams creates a new GetGroupsGroupNameJobsParams object
// with the default values initialized.
func NewGetGroupsGroupNameJobsParams() *GetGroupsGroupNameJobsParams {
	var ()
	return &GetGroupsGroupNameJobsParams{}
}

/*GetGroupsGroupNameJobsParams contains all the parameters to send to the API endpoint
for the get groups group name jobs operation typically these are written to a http.Request
*/
type GetGroupsGroupNameJobsParams struct {

	/*CreatedAfter
	  Will return jobs created after this time. In RFC3339 format.

	*/
	CreatedAfter *strfmt.DateTime
	/*GroupName
	  Name of group for this set of jobs.

	*/
	GroupName string
	/*N
	  Number of jobs to return.

	*/
	N *int32
}

// WithCreatedAfter adds the createdAfter to the get groups group name jobs params
func (o *GetGroupsGroupNameJobsParams) WithCreatedAfter(createdAfter *strfmt.DateTime) *GetGroupsGroupNameJobsParams {
	o.CreatedAfter = createdAfter
	return o
}

// WithGroupName adds the groupName to the get groups group name jobs params
func (o *GetGroupsGroupNameJobsParams) WithGroupName(groupName string) *GetGroupsGroupNameJobsParams {
	o.GroupName = groupName
	return o
}

// WithN adds the n to the get groups group name jobs params
func (o *GetGroupsGroupNameJobsParams) WithN(n *int32) *GetGroupsGroupNameJobsParams {
	o.N = n
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetGroupsGroupNameJobsParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	if o.CreatedAfter != nil {

		// query param created_after
		var qrCreatedAfter strfmt.DateTime
		if o.CreatedAfter != nil {
			qrCreatedAfter = *o.CreatedAfter
		}
		qCreatedAfter := qrCreatedAfter.String()
		if qCreatedAfter != "" {
			if err := r.SetQueryParam("created_after", qCreatedAfter); err != nil {
				return err
			}
		}

	}

	// path param group_name
	if err := r.SetPathParam("group_name", o.GroupName); err != nil {
		return err
	}

	if o.N != nil {

		// query param n
		var qrN int32
		if o.N != nil {
			qrN = *o.N
		}
		qN := swag.FormatInt32(qrN)
		if qN != "" {
			if err := r.SetQueryParam("n", qN); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
