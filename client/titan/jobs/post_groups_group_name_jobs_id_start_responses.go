package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/iron-io/titan/runner/client/models"
)

// PostGroupsGroupNameJobsIDStartReader is a Reader for the PostGroupsGroupNameJobsIDStart structure.
type PostGroupsGroupNameJobsIDStartReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostGroupsGroupNameJobsIDStartReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostGroupsGroupNameJobsIDStartOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostGroupsGroupNameJobsIDStartNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostGroupsGroupNameJobsIDStartConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostGroupsGroupNameJobsIDStartDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostGroupsGroupNameJobsIDStartOK creates a PostGroupsGroupNameJobsIDStartOK with default headers values
func NewPostGroupsGroupNameJobsIDStartOK() *PostGroupsGroupNameJobsIDStartOK {
	return &PostGroupsGroupNameJobsIDStartOK{}
}

/*PostGroupsGroupNameJobsIDStartOK handles this case with default header values.

Job updated.
*/
type PostGroupsGroupNameJobsIDStartOK struct {
	Payload *models.JobWrapper
}

func (o *PostGroupsGroupNameJobsIDStartOK) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/start][%d] postGroupsGroupNameJobsIdStartOK  %+v", 200, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDStartOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDStartNotFound creates a PostGroupsGroupNameJobsIDStartNotFound with default headers values
func NewPostGroupsGroupNameJobsIDStartNotFound() *PostGroupsGroupNameJobsIDStartNotFound {
	return &PostGroupsGroupNameJobsIDStartNotFound{}
}

/*PostGroupsGroupNameJobsIDStartNotFound handles this case with default header values.

Job does not exist.
*/
type PostGroupsGroupNameJobsIDStartNotFound struct {
	Payload *models.Error
}

func (o *PostGroupsGroupNameJobsIDStartNotFound) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/start][%d] postGroupsGroupNameJobsIdStartNotFound  %+v", 404, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDStartNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDStartConflict creates a PostGroupsGroupNameJobsIDStartConflict with default headers values
func NewPostGroupsGroupNameJobsIDStartConflict() *PostGroupsGroupNameJobsIDStartConflict {
	return &PostGroupsGroupNameJobsIDStartConflict{}
}

/*PostGroupsGroupNameJobsIDStartConflict handles this case with default header values.

Job was not in running state.
*/
type PostGroupsGroupNameJobsIDStartConflict struct {
	Payload *models.IDStatus
}

func (o *PostGroupsGroupNameJobsIDStartConflict) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/start][%d] postGroupsGroupNameJobsIdStartConflict  %+v", 409, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDStartConflict) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupNameJobsIDStartDefault creates a PostGroupsGroupNameJobsIDStartDefault with default headers values
func NewPostGroupsGroupNameJobsIDStartDefault(code int) *PostGroupsGroupNameJobsIDStartDefault {
	return &PostGroupsGroupNameJobsIDStartDefault{
		_statusCode: code,
	}
}

/*PostGroupsGroupNameJobsIDStartDefault handles this case with default header values.

Unexpected error
*/
type PostGroupsGroupNameJobsIDStartDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post groups group name jobs ID start default response
func (o *PostGroupsGroupNameJobsIDStartDefault) Code() int {
	return o._statusCode
}

func (o *PostGroupsGroupNameJobsIDStartDefault) Error() string {
	return fmt.Sprintf("[POST /groups/{group_name}/jobs/{id}/start][%d] PostGroupsGroupNameJobsIDStart default  %+v", o._statusCode, o.Payload)
}

func (o *PostGroupsGroupNameJobsIDStartDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
